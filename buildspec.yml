version: 0.2

env:
  variables:
    AWS_REGION:   us-east-1
    REPO_NAME:    demo-app
    CLUSTER_NAME: demo-cluster
  exported-variables:
    - IMAGE_URI

phases:
  install:
    commands:
      - echo "üîß  Starting Docker daemon ‚Ä¶"
      - nohup /usr/bin/dockerd --host=unix:///var/run/docker.sock &> /tmp/dockerd.log &
      - timeout 30 sh -c 'until docker info >/dev/null 2>&1; do sleep 2; done'
      - echo "‚úÖ  Docker is up"
      - curl -sL "$(curl -sL https://dl.k8s.io/release/stable.txt | xargs -I{} echo https://dl.k8s.io/release/{}/bin/linux/amd64/kubectl)" -o /usr/local/bin/kubectl && chmod +x /usr/local/bin/kubectl

  pre_build:
    commands:
      - echo "üîë  Logging in to Amazon ECR ‚Ä¶"
      - ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - REPO_URI=$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO_NAME
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - IMAGE_TAG=$(echo "$CODEBUILD_RESOLVED_SOURCE_VERSION" | cut -c1-7)
      - export IMAGE_URI=$REPO_URI:$IMAGE_TAG
      - echo "üè∑Ô∏è  Using image  $IMAGE_URI"

  build:
    commands:
      - docker build --pull --no-cache -t $IMAGE_URI .
      - docker push $IMAGE_URI

  post_build:
    commands:
      - echo "‚ò∏Ô∏è  Rolling out to EKS ‚Ä¶"
      - aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME
      - kubectl set image deployment/$REPO_NAME $REPO_NAME=$IMAGE_URI --record
      - kubectl rollout status deployment/$REPO_NAME
      - echo "‚úÖ  Deployment succeeded"

artifacts:
  files: []
