version: 0.2

########################
# Global build config  #
########################
env:
  variables:
    AWS_REGION:      us-east-1
    ACCOUNT_ID:      "445567078150"
    REPO_NAME:       demo-app
    CLUSTER_NAME:    demo-cluster
  exported-variables:   # ‚Üê tells CodeBuild to carry these across phases
    - IMAGE_TAG
    - IMAGE_URI

########################
# Build phases         #
########################
phases:

  install:
    runtime-versions:
      python: 3.11             # remove if unused
    commands:
      - yum install -y docker
      - service docker start
      - curl -Lo /usr/local/bin/kubectl \
          https://dl.k8s.io/release/v1.30.1/bin/linux/amd64/kubectl
      - chmod +x /usr/local/bin/kubectl

  pre_build:
    commands:
      - echo "üîë  Logging in to ECR‚Ä¶"
      - aws ecr get-login-password --region $AWS_REGION \
          | docker login --username AWS --password-stdin \
            $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      # üëâ **export** so later phases inherit the value
      - export IMAGE_TAG=$(echo "$CODEBUILD_RESOLVED_SOURCE_VERSION" | cut -c1-7)
      - export IMAGE_URI=$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO_NAME:$IMAGE_TAG
      - echo "üè∑Ô∏è  Using IMAGE_TAG=$IMAGE_TAG"

  build:
    commands:
      - echo "üê≥  Building $IMAGE_URI ‚Ä¶"
      - docker build --no-cache -t "$IMAGE_URI" .
      - docker push "$IMAGE_URI"

  post_build:
    commands:
      - echo "‚ò∏Ô∏è  Rolling out $IMAGE_URI to EKS‚Ä¶"
      - aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME
      - kubectl set image deployment/demo-app \
          demo-app="$IMAGE_URI" --record
      # In case someone ever reverts to ':latest', force a restart
      - kubectl rollout restart deployment/demo-app
      - kubectl rollout status deployment/demo-app
      - echo "‚úÖ  Deployment complete."

########################
# (Optional) artifacts #
########################
artifacts:
  files:
    - imagedefinitions.json
