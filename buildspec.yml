version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.11             # just to get pip if you ever need it
    commands:
      # Docker daemon + kubectl (v1.30.1 ‚Äî current at 2025-06-05)
      - yum install -y docker
      - service docker start
      - curl -Lo /usr/local/bin/kubectl https://dl.k8s.io/release/v1.30.1/bin/linux/amd64/kubectl
      - chmod +x /usr/local/bin/kubectl

  pre_build:
    commands:
      - echo "üîë  Logging in to Amazon ECR..."
      - aws ecr get-login-password --region us-east-1 \
          | docker login --username AWS --password-stdin 445567078150.dkr.ecr.us-east-1.amazonaws.com

      # Use the first 7 chars of the commit SHA as the image tag
      - export IMAGE_TAG=$(echo "$CODEBUILD_RESOLVED_SOURCE_VERSION" | cut -c1-7)
      - export REPOSITORY_URI=445567078150.dkr.ecr.us-east-1.amazonaws.com/demo-app
      - echo "üÜï  IMAGE_TAG set to $IMAGE_TAG"

  build:
    commands:
      - echo "üê≥  Building $REPOSITORY_URI:$IMAGE_TAG ..."
      - docker build --no-cache -t "$REPOSITORY_URI:$IMAGE_TAG" .
      - docker push "$REPOSITORY_URI:$IMAGE_TAG"

      - echo "‚ò∏Ô∏è  Deploying to EKS..."
      - aws eks update-kubeconfig --region us-east-1 --name demo-cluster
      - kubectl set image deployment/demo-app \
          demo-app="$REPOSITORY_URI:$IMAGE_TAG" --record
      - kubectl rollout status deployment/demo-app

  post_build:
    commands:
      - echo "‚úÖ  Build and deployment completed."

artifacts:
  files:
    - imagedefinitions.json      # optional; safe to remove if unused
