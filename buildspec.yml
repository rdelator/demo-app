version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.11
    commands:
      - echo Installing kubectl...
      - curl -LO "https://dl.k8s.io/release/v1.30.1/bin/linux/amd64/kubectl"
      - chmod +x kubectl
      - mv kubectl /usr/local/bin/
      - kubectl version --client
      - echo Installing Docker...
      - yum install -y docker
      - service docker start
      - systemctl enable docker

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region us-east-1)
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - REPOSITORY_URI=445567078150.dkr.ecr.us-east-1.amazonaws.com/demo-app
      - echo Configuring access to EKS...
      - export AWS_REGION=us-east-1
      - export AWS_DEFAULT_REGION=us-east-1
      - export KUBECONFIG=$HOME/.kube/config
      - mkdir -p $HOME/.kube
      - aws eks update-kubeconfig --region $AWS_REGION --name demo-cluster
      - aws sts get-caller-identity

  build:
    commands:
      - echo Building Docker image...
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG .
      - docker tag $REPOSITORY_URI:$IMAGE_TAG $REPOSITORY_URI:latest
      - echo Pushing Docker image to ECR...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:latest
      - echo Restarting deployment...
      - kubectl rollout restart deployment/demo-app
      - kubectl rollout status deployment/demo-app

  post_build:
    commands:
      - echo Creating imagedefinitions.json...
      - printf '[{"name":"demo-app","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
